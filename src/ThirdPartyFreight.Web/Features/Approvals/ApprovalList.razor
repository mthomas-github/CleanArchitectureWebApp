@using Telerik.DataSource
<TelerikGrid Class="grid"
             Data="@Approvals"
             OnUpdate="@UpdateHandler"
             OnDelete="@DeleteHandler"
             ConfirmDelete="true"
             Pageable="true"
             Groupable="true"
             Sortable="true"
             FilterMode="GridFilterMode.FilterMenu"
             Resizable="true"
             Reorderable="true"
             EditMode="GridEditMode.Popup"
             SelectionMode="GridSelectionMode.Multiple"
             OnStateInit="@((GridStateEventArgs<ApprovalDto> args) => OnStateInit(args))"
             PageSize="10"
             Navigable="true">
</TelerikGrid>


@code {
    public List<ApprovalDto> Approvals { get; set; } = [];

    public class ApprovalDto
    {
        public int? CategoryId { get; set; }
        public Guid AgreementId { get; set; }
        public required string Description { get; set; }
        public int TaskId { get; set; }
    }

    protected override void OnInitialized()
    {
        LoadData();
    }
    private static void LoadData()
    {
    }


    private static void UpdateHandler(GridCommandEventArgs arg)
    {
        LoadData();
    }

    private static void DeleteHandler(GridCommandEventArgs arg)
    {
        LoadData();
    }

    private static void OnStateInit(GridStateEventArgs<ApprovalDto> args)
    {
        args.GridState.GroupDescriptors = new List<GroupDescriptor>
        {
            new()
            {
                Member = nameof(ApprovalDto.CategoryId),
                MemberType = typeof(int)
            }
        };
    }

}

<style>
    .width-100 {
        width: 100%;
    }

    .grid .k-grid-content tr {
        line-height: 32px;
    }
</style>