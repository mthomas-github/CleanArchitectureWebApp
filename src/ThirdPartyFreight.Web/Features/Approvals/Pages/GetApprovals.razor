@page "/approvals"
@inject HttpClient Http

<PageTitle>Approvals</PageTitle>
<div class="row justify-content-center" style="padding-top: 20px">
    <TelerikLoaderContainer
        OverlayThemeColor="light"
        Visible="@(!IsInitialDataLoadComplete)"
        Text="@null"
        Class="initial-data-loader">
        <Template>
            <TelerikLoader Size="@ThemeConstants.Loader.Size.Large" Type="LoaderType.InfiniteSpinner"/>
        </Template>
    </TelerikLoaderContainer>
    <TelerikGrid
        Data="@GridData"
        Height="@Height"
        Width="25%"
        Class="k-grid grid-no-scroll row-cols-auto"
        FilterMode="GridFilterMode.FilterMenu"
        FilterMenuType="FilterMenuType.CheckBoxList"
        Pageable="true"
        PageSize="@PageSize"
        Sortable="true"
        SortMode="SortMode.Single"
        ShowColumnMenu="true"
        Resizable="true">
        <GridSettings>
            <GridPagerSettings
                InputType="@InputType"
                PageSizes="@PageSizes"
                ButtonCount="@ButtonCount"
                Position="@PagePosition"/>
        </GridSettings>
        <GridColumns>
            <GridColumn Field="ApprovalId" Title="Id" VisibleInColumnChooser="true" Visible="false" Width="20px"/>
            <GridColumn Field="AgreementId" Title="AgreementId" VisibleInColumnChooser="true" Visible="false" Width="20px"/>
            <GridColumn Field="ApproverDisplayName" TextAlign="ColumnTextAlign.Center" Title="Approver" VisibleInColumnChooser="true" Visible="true" Width="5px"/>
            <GridCommandColumn Width="5px" Title="Agreement Info">
                <GridCommandButton ThemeColor="info" Size="lg" OnClick="@((args) => ToggleWindow(args.Item as ApprovalResponse))" Icon="@SvgIcon.InfoSolid" />
            </GridCommandColumn>
            <GridCommandColumn Width="5px">
                <GridCommandButton ThemeColor="success" Size="lg" Icon="@SvgIcon.Check" OnClick="() => HandleApproval()" />
                <GridCommandButton ThemeColor="error" Size="lg" Icon="@SvgIcon.X" OnClick="() => HandleDecline()" />
            </GridCommandColumn>
        </GridColumns>
    </TelerikGrid>
</div>

@code {
    private ObservableCollection<ApprovalResponse> GridData { get; set; } = [];
    private IEnumerable<ApprovalResponse>? AllData { get; set; } = [];
    private const int PageSize = 20;
    private const string Height = "100%";
    private const int ButtonCount = 5;
    bool IsInitialDataLoadComplete { get; set; }
    PagerInputType InputType { get; set; } = PagerInputType.Buttons;
    PagerPosition PagePosition { get; set; } = PagerPosition.Bottom;
    static List<int?> PageSizes => [20, 30, 40, 50, null];
    bool Visible { get; set; }

    protected override async Task OnInitializedAsync()
    {
        if (IsInitialDataLoadComplete == false)
        {
            AllData = await Http.GetFromJsonAsync<IEnumerable<ApprovalResponse>>($"{GetAllApprovalsEndPoint}");
        }

        if (AllData is not null)
        {
            GridData = new ObservableCollection<ApprovalResponse>(AllData);
            IsInitialDataLoadComplete = true;
        }
    }

    async Task ToggleWindow(ApprovalResponse? item)
    {
        if (item is not null)
        {
            await Http.GetFromJsonAsync<AgreementResponse>($"{GetAgreementEndPoint}{item.AgreementId}");
        }

        Visible = !Visible;
    }

    private static Task HandleApproval()
    {
        throw new NotImplementedException();
    }

    private static Task HandleDecline()
    {
        throw new NotImplementedException();
    }
}