<TelerikGridLayout RowSpacing="6px" ColumnSpacing="6px">
    <GridLayoutRows>
        <GridLayoutRow Height="20px"></GridLayoutRow>
        <GridLayoutRow Height="100px"></GridLayoutRow>
        <GridLayoutRow Height="20px"></GridLayoutRow>
        <GridLayoutRow Height="100dpx"></GridLayoutRow>
    </GridLayoutRows>
    <GridLayoutColumns>
        <GridLayoutColumn Width="210px"></GridLayoutColumn>
        <GridLayoutColumn Width="210px"></GridLayoutColumn>
        <GridLayoutColumn Width="220px"></GridLayoutColumn>
    </GridLayoutColumns>
    <GridLayoutItems>
        <GridLayoutItem Row="1" Column="1">
            <div class="grid-layout-heading k-text-uppercase k-font-weight-bold k-text-inverse">Customer Information</div>
        </GridLayoutItem>
        <GridLayoutItem Row="1" Column="3">
            <div class="grid-layout-heading k-text-uppercase k-font-weight-bold k-text-inverse">Status Information</div>
        </GridLayoutItem>
        <GridLayoutItem Row="2" Column="1" ColumnSpan="2">
            <CustomerInfo CompanyName="@_businessName" CustomerNumber="@_customerNumber" CustomerEmail="@_contactEmail" CustomerName="@_contactName" />
        </GridLayoutItem>
        <GridLayoutItem Row="2" Column="3">
            <StatusInfo Status="@_status" EnvelopeStatus="@_envelopeStatus" MdmTicketNumber="@_mdmTicketNumber" AgreementType="@_agreementType" />
        </GridLayoutItem>
        <GridLayoutItem Row="3" Column="1">
            <div class="grid-layout-heading k-text-uppercase k-font-weight-bold k-text-inverse">Sites & Documents</div>
        </GridLayoutItem>
        <GridLayoutItem Row="4" Column="1" ColumnSpan="3">
            <SitesAndDocuments GridList="@GridDataList" LoadData="false" />
        </GridLayoutItem>
    </GridLayoutItems>
</TelerikGridLayout>

@code {

    [Parameter]
    public AgreementResponse? DataModel { get; set; }

    private List<ModalGrid> GridDataList { get; set; } = [];

    string? _status;
    string? _agreementType;
    string? _envelopeStatus = string.Empty;
    readonly string? _mdmTicketNumber = string.Empty;
    string? _businessName;
    string? _customerNumber;
    string? _contactEmail;
    string? _contactName;

    protected override void OnParametersSet()
    {
        if (DataModel is null) return;
        _status = DataModel.Status.ToString();
        _agreementType = DataModel.AgreementType.ToString();
        _envelopeStatus = DataModel.Envelope!.EnvelopeStatus.ToString();
        _businessName = DataModel.BusinessName;
        _customerNumber = DataModel.CustomerNumber.ToString();
        _contactEmail = DataModel.ContactEmail;
        _contactName = DataModel.ContactName;


        var sites = new ModalGrid
            {
                GridName = "Sites",
                GridData = DataModel.Sites.Cast<object>().ToList(),
                Columns =
                        [
                            new ModalGridColumn { Field = "SiteNumber", Title = "Site #" },
                            new ModalGridColumn { Field = "FullAddress", Title = "Site Address" }
                        ]
            };

        DataModel.Documents ??= [];
        var docs = new ModalGrid
            {
                GridName = "Documents",
                GridData = DataModel.Documents.Cast<object>().ToList(),
                Columns =
                                    [
                                        new ModalGridColumn { Field = "DocumentType", Title = "Document AgreementType" }
                                    ]
            };

        if (GridDataList.Any()) return;
        GridDataList.Add(sites);
        GridDataList.Add(docs);
    }
}
