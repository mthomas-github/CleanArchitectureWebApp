services:
  thirdpartyfreight.api:
    container_name: ThirdPartyFreight.Api
    restart: unless-stopped
    build:
      context: .
      dockerfile: src/ThirdPartyFreight.Api/Dockerfile
    ports:
        - "28080:8080"
        - "28081:8081"
    depends_on:
        - csdtpfblazorwebapp-redis

  csdtpfblazorwebapp-idp:
    image: quay.io/keycloak/keycloak:latest
    command: ["start-dev", "--import-realm"]
    container_name: CSDTPFBlazorWebApp.Identity
    restart: unless-stopped
    environment:
        KC_DB: postgres
        KC_DB_USERNAME: ${KC_DB_USERNAME}
        KC_DB_PASSWORD: ${KC_DB_PASSWORD}
        KC_DB_URL: ${KC_DB_URL}
        KC_METRICS_ENABLED: true
        KEYCLOAK_ADMIN: ${KEYCLOAK_ADMIN}
        KEYCLOAK_ADMIN_PASSWORD: ${KEYCLOAK_ADMIN_PASSWORD}
        KC_REALM_NAME: csd-tpf
    ports:
        - "18080:8080"
    volumes:
        -  ./keycloak-theme/theme/:/opt/keycloak/themes
        -  ./.files/csd-tpf-realm-export.json:/opt/keycloak/data/import/csd-tpf-realm-export.json:ro
  
  csdtpfblazorwebapp-seq:
    image: datalust/seq:latest
    container_name: CSDTPFBlazorWebApp.Seq
    environment:
        - ACCEPT_EULA=Y
    ports:
        - "5341:5341"
        - "8081:80"
    restart: unless-stopped
    
  csdtpfblazorwebapp-redis:
    image: redis:latest
    container_name: CSDTPFBlazorWebApp.Redis
    ports:
        - "6379:6379"
    restart: unless-stopped
    
  elsa-studio:
    image: elsaworkflows/elsa-studio-v3:latest
    container_name: elsa-studio
    depends_on:
        - elsa-server
    environment:
        - HTTP_PORTS=8080
        - ELSASERVER__URL=https://localhost:14001/elsa/api
    ports:
        - "14000:8080"
    
  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbittmq
    ports:
        - "15672:15672"
        - "5672:5672"
  
  elsa-server:
    image: ${DOCKER_REGISTRY-}csdtpfwebapp-elsa-server
    container_name: elsa-server
    build:
      context: .
      dockerfile: elsa/ElsaServer/Dockerfile
    depends_on:
      - rabbitmq
      - csdtpfblazorwebapp-redis
  
  thirdpartyfreight.web:
    image: ${DOCKER_REGISTRY-}csdtpfwebapp-thirdpartyfreight.web
    container_name: ThirdPartyFreight.Web
    restart: unless-stopped
    build:
      context: .
      dockerfile: src/ThirdPartyFreight.Web/Dockerfile
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - thirdpartyfreight.api
      - csdtpfblazorwebapp-idp 